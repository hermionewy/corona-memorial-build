{"version":3,"sources":["js/Intro.js","js/Box.js","js/RainShader.js","js/Points.js","js/Cloud.js","js/FlashLight.js","js/Scene.js","js/Graphic.js","js/Credits.js","js/Main.js","js/Navbar.js","js/App.js","index.js"],"names":["Intro","state","scrolly","id","this","className","copy","title","subtitle","byline","Component","Box","RainShader","vertexShader","fragmentShader","Points","props","mesh","useRef","mat","useState","useLoader","TextureLoader","pointTexture","useFrame","delta","rainDrop","current","material","rotation","y","uniforms","uTime","value","clock","elapsedTime","vertices","aSpeed","i","x","Math","random","z","push","ref","attach","attachObject","count","length","array","Float32Array","itemSize","onUpdate","self","needsUpdate","verticesNeedUpdate","transparent","args","uniforms-uTime","uniforms-pointTexture","Cloud","colorMap","opacity","map","FlashLight","Light","flash","power","position","set","CameraController","useThree","camera","gl","Scene","fov","near","far","GizmoHelper","alignment","margin","GizmoViewport","axisColors","labelColor","color","fallback","Graphic","Credits","href","rel","target","Main","data","Navbar","searchValue","handleChange","bind","handleSubmit","event","setState","window","open","preventDefault","njdcLinks","link","navbarLinks","key","text","src","alt","style","padding","width","onClick","encodeURIComponent","social","site_url","height","description","data-size","email_subj","email_body","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3f6bb14.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport copy from \"../data/copy.json\";\nimport * as d3 from \"d3\";\nimport \"intersection-observer\";\nclass Intro extends Component {\n  state = { scrolly: [] };\n\n  // observer = new IntersectionObserver(\n  //   (entries, self) => {\n  //     entries.forEach((entry) => {\n  //       if (!entry.isIntersecting && entry.boundingClientRect.y < 0) {\n  //         this.activateIntro();\n  //       } else {\n  //         this.resetIntro();\n  //       }\n  //     });\n  //   },\n  //   {\n  //     threshold: 1,\n  //   }\n  // );\n\n  // activateIntro = () => {\n  //   d3.selectAll(\"main section:not(#intro)\").style(\"display\", \"none\");\n  //   d3.select(\"#intro-base-video\").node().play();\n  //   d3.select(\"#intro-base-video\")\n  //     .transition()\n  //     .duration(1500)\n  //     .style(\"opacity\", 1)\n  //     .on(\"end\", function () {\n  //       d3.selectAll(\".intro-transition-content\")\n  //         .transition()\n  //         .delay((d, i) => 500 + 1000 * i)\n  //         .duration(3000)\n  //         .style(\"opacity\", 1)\n  //         .on(\"end\", function () {\n  //           d3.selectAll(\"main section:not(#intro)\").style(\"display\", null);\n  //         });\n  //     });\n  // };\n\n  // resetIntro = () => {\n  //   d3.select(\"#intro-stain-overlay\").style(\"opacity\", 0);\n  //   d3.select(\"#intro-base-video\").transition().style(\"opacity\", 0);\n  //   d3.selectAll(\".intro-transition-content\").style(\"opacity\", 0);\n  //   const videoEl = d3.select(\"#intro-base-video\").node();\n  //   videoEl.pause();\n  //   videoEl.currentTime = 0;\n  // };\n\n  componentDidMount() {\n    // this.setState({\n    //   scrolly: copy.intro.map((step, i) => (\n    //     <div key={i} className=\"intro-scrolly-text\">\n    //       {step.step.map((para, j) => (\n    //         <p key={j}>{para.value}</p>\n    //       ))}\n    //     </div>\n    //   )),\n    // });\n  }\n\n  componentDidUpdate() {\n    // const els = document.getElementsByClassName(\"intro-scrolly-text\");\n    // this.observer.observe(els[els.length - 1]);\n  }\n\n  render() {\n    return (\n      <section id=\"intro\">\n        <div id=\"intro-scrolly-container\">\n          {this.state.scrolly}\n          <div id=\"title-container\">\n            <h1 id=\"title\" className=\"intro-transition-content\">\n              {copy.title}\n            </h1>\n            <h2 id=\"subtitle\" className=\"intro-transition-content\">\n              {copy.subtitle}\n            </h2>\n            <h3 id=\"byline\" className=\"intro-transition-content\">\n              {copy.byline}\n            </h3>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Intro;\n","import React, { useRef, useState } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\n\nfunction Box(props) {\n    console.log('props', props)\n    // This reference will give us direct access to the THREE.Mesh object\n    const mesh = useRef();\n    // Set up state for the hovered and active state\n    const [hovered, setHover] = useState(false);\n    const [active, setActive] = useState(false);\n    // Subscribe this component to the render-loop, rotate the mesh every frame\n    useFrame((state, delta) => (mesh.current? (mesh.current.rotation.x += 0.01) : null ));\n    // Return the view, these are regular Threejs elements expressed in JSX\n    // console.log('Mesh', mesh);\n    return (\n        <mesh\n            {...props}\n            ref={mesh}\n            scale={active ? 1.5 : 1}\n            onClick={event => setActive(!active)}\n            onPointerOver={event => setHover(true)}\n            onPointerOut={event => setHover(false)}\n        >\n            <boxGeometry args={[1, 1, 1]} />\n            <meshStandardMaterial color={hovered ? \"hotpink\" : \"orange\"} />\n        </mesh>\n    );\n}\n\nexport default Box;\n","const RainShader = {\n    vertexShader: `\n    uniform float uTime;\n    attribute float aSpeed;\n\n    void main() {\n        vec3 transformed = position.xyz;\n        float velocity = -80.0 + aSpeed*40.0;\n        float cycle = mod(uTime, 1.5);\n        transformed.y += (velocity * cycle);\n        \n        vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n        gl_Position = projectionMatrix * mvPosition;\n        gl_PointSize = 0.4 * ( 400.0 / -mvPosition.z );\n    }\n  `,\n    fragmentShader: `\n    uniform sampler2D pointTexture;\n    void main() {\n        vec3 color = vec3(1.0,1.0,1.0);\n        gl_FragColor = vec4(color, 0.8);\n        gl_FragColor = gl_FragColor * texture2D( pointTexture, gl_PointCoord );\n    }\n  `\n};\n\nexport { RainShader };\n\n","import React, { useRef, useState } from \"react\";\nimport { useFrame, useLoader } from \"@react-three/fiber\";\n// import { a } from \"@react-spring/three\";\nimport * as THREE from 'three';\nimport { RainShader } from \"./RainShader\";\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\n\nfunction Points(props) {\n    // This reference will give us direct access to the THREE.Mesh object\n    const mesh = useRef(); \n    const mat = useRef();\n    // Set up state for the hovered and active state\n    const [hovered, setHover] = useState(false);\n    const [active, setActive] = useState(false);\n    const [pointTexture] = useLoader(TextureLoader, [\n        \"./assets/images/spark1.png\"\n    ]);\n\n    // Subscribe this component to the render-loop, rotate the mesh every frame\n    useFrame((state, delta) =>{     \n        const rainDrop = mesh.current;\n        const material = mat.current;\n        if (rainDrop) {\n            rainDrop.rotation.y += 0.001;\n            material.uniforms.uTime.value = state.clock.elapsedTime;\n            // console.log(\"material.uniforms.uTime\", material.uniforms.uTime);\n        }\n    });\n\n    // Return the view, these are regular Threejs elements expressed in JSX\n    const COUNT = 25000;\n    const vertices = [], aSpeed=[];\n    for (let i = 0; i < COUNT; i++) {\n        const x = Math.random() * 400 -200;\n        const y = Math.random() * 400 - 200;\n        const z = Math.random() * 400 - 200;\n        vertices.push(x, y, z);\n        aSpeed.push(Math.random());\n    }\n    \n    let dotSize = 0.5, dotColor = '#aaaaaa';\n    // console.log(\"points running: \", mesh, aSpeed);\n    return (\n        <points ref={mesh}>\n            <bufferGeometry attach=\"geometry\">\n                <bufferAttribute\n                    attachObject={[\"attributes\", \"position\"]}\n                    count={vertices.length / 3}\n                    // this renders the dots fine\n                    array={new Float32Array(vertices)}\n                    itemSize={3}\n                    onUpdate={self => {\n                        self.needsUpdate = true;\n                        self.verticesNeedUpdate = true;\n                    }}\n                />\n                <bufferAttribute\n                    attachObject={[\"attributes\", \"aSpeed\"]}\n                    count={aSpeed.length}\n                    array={new Float32Array(aSpeed)}\n                    itemSize={1}\n                />\n            </bufferGeometry>\n\n            <shaderMaterial\n                attach=\"material\"\n                transparent={true}\n                ref={mat}\n                args={[RainShader]}\n                uniforms-uTime={{ value: 0 }}\n                uniforms-pointTexture={{value: pointTexture}}\n            />\n        </points>\n    );\n}\n\nexport default Points;\n","import React, { useRef } from \"react\";\nimport { useLoader, useFrame } from \"@react-three/fiber\";\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\nfunction Cloud(props) {\n    // This reference will give us direct access to the THREE.Mesh object\n    const mesh = useRef();\n    // // Set up state for the hovered and active state\n    // const [hovered, setHover] = useState(false);\n    // const [active, setActive] = useState(false);\n    // // Subscribe this component to the render-loop, rotate the mesh every frame\n    useFrame((state, delta) =>\n        mesh.current ? (mesh.current.rotation.z -= 0.001) : null\n    );\n    const [colorMap] = useLoader(TextureLoader, [\n        \"./assets/images/smoke-1.png\"\n    ]);\n\n    return (\n        <mesh {...props} ref={mesh} rotation={[1.16, -0.12, Math.random() * 400]} >\n            <planeBufferGeometry args={[600, 600]} />\n            <meshLambertMaterial opacity={0.3} transparent={true} map={colorMap} />\n        </mesh>\n    );\n}\n\nexport default Cloud;\n","import React, { useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\n\nfunction FlashLight(props) {\n    // This reference will give us direct access to the THREE.Mesh object\n    const Light = useRef();\n    // // Set up state for the hovered and active state\n    // const [hovered, setHover] = useState(false);\n    // const [active, setActive] = useState(false);\n    // // Subscribe this component to the render-loop, rotate the mesh every frame\n    useFrame((state, delta) =>{\n        let flash = Light.current;\n        if (Math.random() > 0.93 || flash.power > 100) {\n            if (flash.power < 100)\n                flash.position.set(\n                    Math.random() * 400,\n                    300 + Math.random() * 200,\n                    100\n                );\n            flash.power = 50 + Math.random() * 500;\n        }\n    });\n\n\n    return (\n        <pointLight\n            ref={Light}\n            args={[0x062d89, 30, 500, 1.7]}\n            position={[200, 300, 100]}\n        />\n    );\n}\n\nexport default FlashLight;\n","// import { Box} from \"@react-three/drei\";\nimport React, { Suspense, Component, useEffect } from \"react\";\nimport { Canvas, useThree } from \"@react-three/fiber\";\n// import { Physics, useBox, usePlane } from \"@react-three/cannon\";\nimport Box from \"./Box\";\nimport Points from \"./Points\";\nimport Cloud from \"./Cloud\";\nimport FlashLight from \"./FlashLight\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { GizmoHelper, GizmoViewport } from \"@react-three/drei\";\n// https://docs.pmnd.rs/react-three-fiber/API/objects\n\nconst CameraController = () => {\n    const { camera, gl } = useThree();\n    camera.rotation.x = 1.16;\n    camera.rotation.y = -0.12;\n    camera.rotation.z = 0.27;\n    // useEffect(() => {\n    //     const controls = new OrbitControls(camera, gl.domElement);\n    //     controls.minDistance = 1;\n    //     controls.maxDistance = 100;\n    //     return () => {\n    //         controls.dispose();\n    //     };\n    // }, [camera, gl]);\n    return null;\n};\n\nclass Scene extends Component {\n    render() {\n        return (\n            <Canvas\n                camera={{\n                    fov: 60,\n                    near: 0.1,\n                    far: 1000,\n                    position: [0, 0, 1],\n                    rotation: [1.16, -0.12, 0.27]\n                    // rotation: [1.16, -0.12, 0.27]\n                }}\n            >\n                <GizmoHelper\n                    alignment=\"bottom-right\" // widget alignment within scene\n                    margin={[80, 80]} // widget margins (X, Y)\n                >\n                    <GizmoViewport\n                        axisColors={[\"red\", \"green\", \"blue\"]}\n                        labelColor=\"black\"\n                    />\n                    {/* alternative: <GizmoViewcube /> */}\n                </GizmoHelper>\n\n                <CameraController />\n                <FlashLight />\n                <ambientLight color=\"#555555\" />\n                <directionalLight color=\"#ffeedd\" position={[0, 0, 1]} />\n                <pointLight\n                    args={[0x062d89, 30, 500, 1.7]}\n                    position={[200, 300, 100]}\n                />\n\n                <Suspense fallback={null}>\n                    <Points />\n                    <Cloud position={[ Math.random() * 300 - 150, 500, Math.random() * 500 - 450 ]} />\n                    <Cloud position={[ Math.random() * 300 - 150, 500, Math.random() * 500 - 450 ]} />\n                    <Cloud position={[ Math.random() * 300 - 150, 500, Math.random() * 500 - 450 ]} />\n                </Suspense>\n                {/* <fog attach=\"fog\" args={[\"white\", 0, 26]} /> */}\n                <fogExp2 attach=\"fogExp2\" args={[\"white\", 0.002]} />\n            </Canvas>\n        );\n    }\n}\n\nexport default Scene;\n","import React, { Component } from \"react\";\nimport copy from \"../data/copy.json\";\nimport * as d3 from \"d3\";\nimport Scene from \"./Scene\";\nclass Graphic extends Component {\n  state = { scrolly: [] };\n\n\n  render() {\n    return (\n      <section id=\"graphic_ctn\">\n          <Scene />\n      </section>\n    );\n  }\n}\n\nexport default Graphic;\n","import React, { Component } from \"react\";\n\nclass Credits extends Component {\n\n  render() {\n    return (\n      <section className=\"credits-section\">\n        <h2 id=\"credit-title\">Credits</h2>\n        <p className= \"credits\"><span className=\"job\">Reporting:</span> Ted Sherman is an enterprise and investigations reporter assigned to the Statehouse Bureau. Email him at <a href=\"mailto:tsherman@njadvancemedia.com\">tsherman@njadvancemedia.com</a> or connect with him on Twitter <a href=\"https://twitter.com/TedShermanSL\" rel=\"noopener noreferrer\" target=\"_blank\">@TedShermanSL.</a></p>\n        <p className= \"credits\"><span className=\"job\">Design and Development:</span> Cassidy Grom is a designer and reporter. Email her at <a href=\"mailto:cgrom@njadvancemedia.com\">cgrom@njadvancemedia.com</a> or connect with her on Twitter <a href=\"https://twitter.com/CassidyGrom\" rel=\"noopener noreferrer\" target=\"_blank\">@CassidyGrom.</a></p>\n        <p className= \"credits\"><span className=\"job\">Design and Development:</span> Arjun Kakkar is a developer and designer specializing in data visualization. Email him at <a href=\"mailto:akakkar@njadvancemedia.com\">akakkar@njadvancemedia.com</a> or connect with him on Twitter <a href=\"https://twitter.com/ArjunKakkar15\" rel=\"noopener noreferrer\" target=\"_blank\">@ArjunKakkar15.</a></p>\n        <p className= \"credits\"><span className=\"job\">Project Editors:</span> Ashleigh Graf and Christopher Kelly</p>\n        <p className= \"credits\"><span className=\"job\">Photos and videos:</span> Newsroom stock footage (Penn Station), Storyblocks stock footage (aerial shot, wine stains, airplane, Broadway), Patti Sapone (NJ transit train), Joe Fusco (family photos), Andre Malok (beach).</p>\n        <p className= \"credits\"><span className=\"job\">Additional contributors:</span> Alyssa Passeggio</p>\n      </section>\n    );\n  }\n}\n\nexport default Credits;","import React, { Component } from \"react\";\nimport Intro from \"./Intro\";\nimport Graphic from './Graphic';\n// import Scrolly from \"./Scrolly\";\n// import Video from \"./Video\";\n// import Text from \"./Text\";\nimport Credits from \"./Credits\";\nimport copy from \"../data/copy.json\";\n\nclass Main extends Component {\n  render() {\n    return (\n      <main>\n        <Intro />\n        <Graphic />\n        <Credits data={copy[\"credits-section\"]} />\n      </main>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport copy from \"../data/copy.json\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchValue: \"search\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ searchValue: event.target.value });\n  }\n\n  handleSubmit(event) {\n    window.open(`https://nj.com/search?q=${this.state.searchValue}`);\n    event.preventDefault();\n  }\n\n  render() {\n    let njdcLinks = [];\n\n    for (const link in copy.navbarLinks) {\n      const current = copy.navbarLinks[link];\n      njdcLinks.push(\n        <a\n          key={link}\n          href={current.link}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {current.text}\n        </a>\n      );\n    }\n\n    function facebookShare() {\n      window.open(\n        `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(\n          copy.social.site_url\n        )}`,\n        \"facebook-share-dialog\",\n        \"width=626,height=436\"\n      );\n      return false;\n    }\n\n    return (\n      <section id=\"navbar\">\n        <div className=\"navbar-logo\">\n          <a\n            href=\"https://www.nj.com/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img\n              src=\"./assets/images/njdotcomlogowhite.png\"\n              alt=\"nj.com logo\"\n              style={{ padding: `5px 0px 4px 5px`, width: `50px` }}\n            />\n          </a>\n        </div>\n        <div className=\"navbar-social\">\n          <div className=\"button-container\">\n            <a\n              href=\"https://www.nj.com/digitalsubscription/inline/?utm_source=INL&utm_medium=ACQ-ADH0-1030a&utm_campaign=ACQ\"\n              className=\"sub-button\"\n            >\n              subscribe\n            </a>\n          </div>\n          <a href=\"/\" onClick={facebookShare} className=\"social-button nav-soc\">\n            <img\n              src=\"./assets/images/white-facebook.png\"\n              alt=\"share using facebook\"\n              style={{ padding: `17px 8px 12px 13px`, height: `87%` }}\n            />\n          </a>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={`https://twitter.com/intent/tweet?url=${copy.social.site_url}&text=${copy.social.description}`}\n            data-size=\"large\"\n            className=\"social-button nav-soc\"\n          >\n            <img\n              src=\"./assets/images/white-Twitter.png\"\n              alt=\"share using twitter\"\n              style={{ padding: `12px 5px 2px 5px`, height: `80%` }}\n            />\n          </a>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={`mailto:?subject=${copy.social.email_subj}&body=${copy.social.email_body}`}\n            className=\"social-button nav-soc\"\n          >\n            <img\n              src=\"./assets/images/envelope.png\"\n              alt=\"share using email\"\n              style={{ padding: `14px 9px 2px 5px`, height: `75%` }}\n            />\n          </a>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react'\nimport Main from \"./Main\"\nimport Navbar from \"./Navbar\"\n\nclass App extends Component {\n    render() {\n        return(\n            <div className=\"App\">\n                    <Navbar />\n                    <Main />\n            </div>\n        )\n    }\n}\n\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./js/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}