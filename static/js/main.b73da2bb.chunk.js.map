{"version":3,"sources":["js/Intro.js","js/Timeline.js","js/RainShader.js","js/stepAttr.js","js/Points.js","js/Cloud.js","js/FlashLight.js","js/UpdateCamera.js","js/Scene.js","js/ScrollCtn.js","js/Credits.js","js/Main.js","js/Navbar.js","js/App.js","index.js"],"names":["Intro","state","scrolly","id","this","className","copy","title","subtitle","byline","Component","Timeline","RainShader","vertexShader","fragmentShader","stepPoint","week","num","Points","props","step","stepNum","console","log","mesh","useRef","mat","useLoader","TextureLoader","pointTexture","useFrame","delta","rainDrop","current","material","rotation","y","uniforms","uTime","value","clock","elapsedTime","vertices","aSpeed","death_to_date","push","i","t","Math","PI","random","u","r","x","cos","sin","z","randomNum","getRank","idx","arr","rank","length","indexOf","ref","attach","attachObject","count","array","Float32Array","itemSize","onUpdate","self","needsUpdate","verticesNeedUpdate","transparent","depthTest","args","blending","THREE","uniforms-uTime","uniforms-pointTexture","uniforms-uHighlight","Cloud","colorMap","opacity","map","FlashLight","Light","flash","power","position","set","ChangeCamera","useThree","camera","scene","fov","near","far","targetBox","getObjectByName","targetPos","tPos","lookAt","tweenCamera","updateProjectionMatrix","TWEEN","update","cameraPos","pos","Tween","to","easing","Easing","Quadratic","Out","start","UpdateCamera","extend","OrbitControls","Scene","GizmoHelper","alignment","margin","GizmoViewport","axisColors","labelColor","name","visible","color","fallback","ScrollCtn","useState","currentStepIndex","setCurrentStepIndex","fullProgress","data","content","filter","type","style","top","height","progress","onStepEnter","threshold","offset","_","stepIndex","key","padding","width","background","border","Credits","href","rel","target","Main","Navbar","searchValue","handleChange","bind","handleSubmit","event","setState","window","open","preventDefault","njdcLinks","link","navbarLinks","text","src","alt","onClick","encodeURIComponent","social","site_url","description","data-size","email_subj","email_body","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b73da2bb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport copy from \"../data/copy.json\";\nimport * as d3 from \"d3\";\nimport \"intersection-observer\";\nclass Intro extends Component {\n  state = { scrolly: [] };\n\n  // observer = new IntersectionObserver(\n  //   (entries, self) => {\n  //     entries.forEach((entry) => {\n  //       if (!entry.isIntersecting && entry.boundingClientRect.y < 0) {\n  //         this.activateIntro();\n  //       } else {\n  //         this.resetIntro();\n  //       }\n  //     });\n  //   },\n  //   {\n  //     threshold: 1,\n  //   }\n  // );\n\n  // activateIntro = () => {\n  //   d3.selectAll(\"main section:not(#intro)\").style(\"display\", \"none\");\n  //   d3.select(\"#intro-base-video\").node().play();\n  //   d3.select(\"#intro-base-video\")\n  //     .transition()\n  //     .duration(1500)\n  //     .style(\"opacity\", 1)\n  //     .on(\"end\", function () {\n  //       d3.selectAll(\".intro-transition-content\")\n  //         .transition()\n  //         .delay((d, i) => 500 + 1000 * i)\n  //         .duration(3000)\n  //         .style(\"opacity\", 1)\n  //         .on(\"end\", function () {\n  //           d3.selectAll(\"main section:not(#intro)\").style(\"display\", null);\n  //         });\n  //     });\n  // };\n\n  // resetIntro = () => {\n  //   d3.select(\"#intro-stain-overlay\").style(\"opacity\", 0);\n  //   d3.select(\"#intro-base-video\").transition().style(\"opacity\", 0);\n  //   d3.selectAll(\".intro-transition-content\").style(\"opacity\", 0);\n  //   const videoEl = d3.select(\"#intro-base-video\").node();\n  //   videoEl.pause();\n  //   videoEl.currentTime = 0;\n  // };\n\n  componentDidMount() {\n    // this.setState({\n    //   scrolly: copy.intro.map((step, i) => (\n    //     <div key={i} className=\"intro-scrolly-text\">\n    //       {step.step.map((para, j) => (\n    //         <p key={j}>{para.value}</p>\n    //       ))}\n    //     </div>\n    //   )),\n    // });\n  }\n\n  componentDidUpdate() {\n    // const els = document.getElementsByClassName(\"intro-scrolly-text\");\n    // this.observer.observe(els[els.length - 1]);\n  }\n\n  render() {\n    return (\n      <section id=\"intro\">\n        <div id=\"intro-scrolly-container\">\n          {this.state.scrolly}\n          <div id=\"title-container\">\n            <h1 id=\"title\" className=\"intro-transition-content\">\n              {copy.title}\n            </h1>\n            <h2 id=\"subtitle\" className=\"intro-transition-content\">\n              {copy.subtitle}\n            </h2>\n            <h3 id=\"byline\" className=\"intro-transition-content\">\n              {copy.byline}\n            </h3>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Intro;\n","import React, { useState, useRef } from \"react\";\n\n\nfunction Timeline(prop){\n    let {step} = prop;\n    console.log(\"Timeline\", step);\n    let [dateLabel, setDateLabel] = useState(\"Mar. '20\");\n    let [val, setVal] = useState(0);\n    // let {slider, setSlider} = useState(0);\n    const timeLabels = [\"Mar. '20\", \"Apr. '20\", \"May '20\", \"Jun. '20\", \"Jul. '20\", \"Aug. '20\", \"Sep. '20\", \"Oct. '20\", \"Nov. '20\", \"Dec. '20\", \"Jan. '21\", \"Feb. '21\",\n    \"Mar. '21\", \"Apr. '21\", \"May '21\", \"Jun. '21\", \"Jul. '21\", \"Aug. '21\", \"Sep. '21\", \"Oct. '21\", \"Nov. '21\", \"Dec. '21\", \"Jan. '22\", \"Feb. '22\",\"Mar. '22\"\n    ];\n\n\n    function onChange(ev){\n        const val = ev.target.value;\n        // ev.value = val;\n        setVal(val);\n        dateLabel = setDateLabel(timeLabels[val])\n        console.log('val', val)\n    }\n\n    return (\n            <div className=\"timeline\">\n                <input type=\"range\" name=\"DateSlider\" id=\"DateSlider\" min=\"0\" max=\"24\" step=\"1\" value={ (!step? 0: (step==5)? timeLabels.length:step ) } onChange={onChange} />\n                <label id=\"dateLabelCtn\">{dateLabel}</label>\n                <div className='label' id=\"dateStart\">Mar. '20</div>\n                <div className='label' id=\"dateEnd\">Mar. '22</div>\n            </div>\n    );\n}\n\nexport default Timeline;","const RainShader = {\n    vertexShader: `\n    #define PI 3.14159265359\n    uniform float uTime;\n    uniform float uHighlight;\n    attribute vec3 aSpeed;\n\n    vec3 mod289(vec3 x) {\n      return x - floor(x * (1.0 / 289.0)) * 289.0;\n    }\n\n    vec2 mod289(vec2 x) {\n      return x - floor(x * (1.0 / 289.0)) * 289.0;\n    }\n\n    vec3 permute(vec3 x) {\n      return mod289(((x*34.0)+1.0)*x);\n    }\n\n    float snoise(vec2 v){\n      const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                          0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                          0.024390243902439); // 1.0 / 41.0\n    // First corner\n      vec2 i  = floor(v + dot(v, C.yy) );\n      vec2 x0 = v -   i + dot(i, C.xx);\n\n    // Other corners\n      vec2 i1;\n      //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n      //i1.y = 1.0 - i1.x;\n      i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n      // x0 = x0 - 0.0 + 0.0 * C.xx ;\n      // x1 = x0 - i1 + 1.0 * C.xx ;\n      // x2 = x0 - 1.0 + 2.0 * C.xx ;\n      vec4 x12 = x0.xyxy + C.xxzz;\n      x12.xy -= i1;\n\n    // Permutations\n      i = mod289(i); // Avoid truncation effects in permutation\n      vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n      vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n      m = m*m ;\n      m = m*m ;\n      vec3 x = 2.0 * fract(p * C.www) - 1.0;\n      vec3 h = abs(x) - 0.5;\n      vec3 ox = floor(x + 0.5);\n      vec3 a0 = x - ox;\n      m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n    // Compute final noise value at P\n      vec3 g;\n      g.x  = a0.x  * x0.x  + h.x  * x0.y;\n      g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n      return 130.0 * dot(m, g);\n    }\n\n    vec3 getCurvePosition(float posX, float posY, float posZ){\n        float noiseScale = 0.005;\n        vec3 newPos = vec3(0.);\n        newPos.x = posX;\n        newPos.z = posZ;\n        newPos.y = snoise( vec2( posX * noiseScale +sin( posY* uTime/2000.0), posZ * noiseScale + sin(posY* uTime/2000.) ) ) * 20.0;\n        return newPos;\n    }\n\n    void main() {\n        float posX = position.x;\n        float posY = position.y;\n        float posZ = position.y;\n        vec4 mvPosition = vec4(0.);\n\n        if(uHighlight == 0. || uHighlight== 19.){\n          vec3 newPos = getCurvePosition(posX, posY, posZ);\n\n          mvPosition = modelViewMatrix * vec4( newPos, 1.0 );    \n        } else {\n          vec3 transformed = position.xyz;\n          float velocity = -50.0 + aSpeed.x *40.0;\n          float cycle = mod(uTime, 5.0);\n          if(aSpeed.z <= uHighlight){\n            transformed.y += (velocity * cycle);\n          } else {\n            transformed.y = -400.0;\n          }\n          mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n        }\n\n        gl_Position = projectionMatrix * mvPosition;\n        \n        gl_PointSize = 1.5+ ( 400.0 / -mvPosition.z );\n    }\n  `,\n    fragmentShader: `\n    uniform sampler2D pointTexture;\n    uniform float uTime;\n\n    float map(float value, float oldMin, float oldMax, float newMin, float newMax) {\n        return newMin + (newMax - newMin) * (value - oldMin) / (oldMax - oldMin);\n    }\n    float rand(vec2 co){\n      return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n    }\n    void main() {\n        vec3 color = vec3(1.0, 1.0, 1.0);\n        vec2 toCenter = (gl_PointCoord.xy - 0.5) * 2.0;\n        float len = length(toCenter);\n        float a = 1.0 - len;\n        gl_FragColor = vec4(color, a);\n    }\n  `\n};\n\n//   fragmentShader: `\n//   uniform sampler2D pointTexture;\n//   void main() {\n//       vec3 color = vec3(1.0,1.0,1.0);\n//       gl_FragColor = vec4(color, 0.8);\n//       gl_FragColor = gl_FragColor * texture2D( pointTexture, gl_PointCoord );\n//   }\n// `\n\n// void main() {\n// vec3 transformed = position.xyz;\n// float velocity = -50.0 + aSpeed.x *40.0;\n// float cycle = mod(uTime, 50.0);\n// if(aSpeed.z <= uHighlight){\n//   transformed.y += (velocity * cycle);\n// } else {\n//   transformed.y = -400.0;\n// }\n\n//         vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n//         gl_Position = projectionMatrix * mvPosition;\n//     }\nexport { RainShader };\n","export const stepPoint = [\n    { week: 0, num: 0 },\n    { week: 1, num: 3 },\n    { week: 2, num: 7 },\n    { week: 3, num: 11 },\n    { week: 4, num: 15 },\n    { week: 5, num: 19 },\n];\n","import React, { useRef } from \"react\";\nimport { useFrame, useLoader } from \"@react-three/fiber\";\nimport { RainShader } from \"./RainShader\";\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\nimport { stepPoint } from \"./stepAttr\";\nimport * as THREE from 'three';\n\nfunction Points(props) {\n    // This reference will give us direct access to the THREE.Mesh object\n    let {step} = props;\n    const stepNum = !stepPoint[step]? 0.0: stepPoint[step]['num'];\n    console.log(\"points step\", step, stepPoint[step], stepNum);\n    const mesh = useRef(); \n    const mat = useRef();\n    // Set up state for the hovered and active state\n    const [pointTexture] = useLoader(TextureLoader, [\n        \"./assets/images/raindrop_img.png\"\n    ]);\n\n    // Subscribe this component to the render-loop, rotate the mesh every frame\n    useFrame((state, delta) =>{\n        const rainDrop = mesh.current;\n        const material = mat.current;\n        if (rainDrop) {\n            rainDrop.rotation.y += 0.0001;\n            material.uniforms.uTime.value = state.clock.elapsedTime;\n            // console.log(\"material.uniforms.uTime\", material.uniforms.uTime);\n        }\n    });\n\n    // Return the view, these are regular Threejs elements expressed in JSX\n    const COUNT = 23350;\n    const vertices = [], aSpeed=[];\n    const death_to_date = [1,3,44,267,1232,2805,4753,6442,8244,9508,10586,11191,11770,12303,12727,12949,13181,13425,13635,13763,13905,13982,14037,14086,14124,14170,14213,14254,14285,14326,14360,14394,14438,14517,14582,14661,14817,15007,15254,15590,16004,16418,16832,17361,17980,18421,18984,19455,19916,20251,20689,20990,21238,21492,21727,21951,22132,22372,22614,22849,23033,23201,23350];\n    vertices.push(0.0, 200.0, 0.0);\n    aSpeed.push(0.0001, 0, 0);// speed, index, rank\n    //let testArr = [0];\n    for (let i = 1; i < COUNT; i++) {\n        const R = 400;\n        // const x = (Math.random() * 100 - 50) * Math.sin(Math.random());\n        // const y = Math.random() * 400 - 200;\n        // const z = (Math.random() * 50 - 25) * Math.cos(Math.random());\n        let t = 2 * Math.PI * Math.random();\n        let u = Math.random() + Math.random();\n        let r = u>1? (2-u)*R: u*R;\n\n        const x = r * Math.cos(t);\n        const y = r* Math.sin(t);\n        const z = Math.random() * 800 - 400;\n        const randomNum = Math.random();\n        vertices.push(x, y, z);\n        aSpeed.push(randomNum===0? Math.random(): randomNum , i, getRank(i, death_to_date));\n        //testArr.push(getRank(i, death_to_date));\n    }\n    // console.log('testArr', testArr);\n    function getRank(idx, arr){\n        let rank = 0;\n        for(let i=0; i<arr.length-1; i++){\n            if(idx>=arr[i] && idx<arr[i+1]){\n                rank = arr.indexOf(arr[i+1]);\n            } \n        }\n        return rank\n    }\n\n    let dotSize = 0.5, dotColor = '#aaaaaa';\n    // console.log(\"points running: \", mesh, aSpeed);\n    return (\n        <points ref={mesh}>\n            <bufferGeometry attach=\"geometry\">\n                <bufferAttribute\n                    attachObject={[\"attributes\", \"position\"]}\n                    count={vertices.length / 3}\n                    // this renders the dots fine\n                    array={new Float32Array(vertices)}\n                    itemSize={3}\n                    onUpdate={self => {\n                        self.needsUpdate = true;\n                        self.verticesNeedUpdate = true;\n                    }}\n                />\n                <bufferAttribute\n                    attachObject={[\"attributes\", \"aSpeed\"]}\n                    count={aSpeed.length / 3}\n                    array={new Float32Array(aSpeed)}\n                    itemSize={3}\n                />\n            </bufferGeometry>\n\n            <shaderMaterial\n                attach=\"material\"\n                transparent={true}\n                depthTest={false}\n                ref={mat}\n                args={[RainShader]}\n                blending={THREE.AdditiveBlending}\n                uniforms-uTime={{ value: 0 }}\n                uniforms-pointTexture={{ value: pointTexture }}\n                uniforms-uHighlight={{ value: stepNum }}\n            />\n        </points>\n    );\n}\n\nexport default Points;\n","import React, { useRef } from \"react\";\nimport { useLoader, useFrame } from \"@react-three/fiber\";\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\nfunction Cloud(props) {\n    // This reference will give us direct access to the THREE.Mesh object\n    const mesh = useRef();\n    // // Set up state for the hovered and active state\n    // const [hovered, setHover] = useState(false);\n    // const [active, setActive] = useState(false);\n    // // Subscribe this component to the render-loop, rotate the mesh every frame\n    useFrame((state, delta) =>\n        mesh.current ? (mesh.current.rotation.z -= 0.0005) : null\n    );\n    const [colorMap] = useLoader(TextureLoader, [\n        \"./assets/images/smoke-1.png\"\n    ]);\n\n    return (\n        <mesh {...props} ref={mesh} rotation={[1.16, -0.12, 200]} >\n            <planeBufferGeometry args={[600, 600]} />\n            <meshLambertMaterial opacity={0.3} transparent={true} map={colorMap} />\n        </mesh>\n    );\n}\n\nexport default Cloud;\n","import React, { useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\n\nfunction FlashLight(props) {\n    // This reference will give us direct access to the THREE.Mesh object\n    const Light = useRef();\n    // // Set up state for the hovered and active state\n    // const [hovered, setHover] = useState(false);\n    // const [active, setActive] = useState(false);\n    // // Subscribe this component to the render-loop, rotate the mesh every frame\n    useFrame((state, delta) =>{\n        let flash = Light.current;\n        if (Math.random() > 0.96 || flash.power > 100) {\n            if (flash.power < 100)\n                flash.position.set(\n                    Math.random() * 400,\n                    300 + Math.random() * 200,\n                    100\n                );\n            flash.power = 50 + Math.random() * 500;\n        }\n    });\n\n\n    return (\n        <pointLight\n            ref={Light}\n            args={[0x062d89, 30, 500, 1.7]}\n            position={[200, 300, 100]}\n        />\n    );\n}\n\nexport default FlashLight;\n","// import { Box} from \"@react-three/drei\";\nimport React from \"react\";\nimport { useThree, useFrame } from \"@react-three/fiber\";\nimport TWEEN from \"@tweenjs/tween.js\";\nimport * as THREE from \"three\";\n\nconst ChangeCamera = props => {\n    const { step } = props;\n    // let camTarget = new THREE.Vector3(0, 0, 0);\n    const {camera, scene } = useThree();\n    camera.fov = 60;\n    camera.near = 0.1;\n    camera.far = 1000;\n    // camera.rotation.x = 1.16;\n    // camera.rotation.y = -0.12;\n    // camera.rotation.z = 0.27;\n    // const cameraInitPos = { x: 0, y: 200, z: 450 };\n    // camera.lookAt(0, -40, -20);\n    //const cameraInitPos = { x: 0, y: 150, z: 400 };\n    const cameraInitPos = { x: 0, y: 100, z: 400 };\n    let targetBox = scene.getObjectByName(\"cameraTarget\");\n    let targetPos = new THREE.Vector3(0, 0, 0);\n    let tPos = targetBox ? targetBox.position : new THREE.Vector3(0, 0, 0);\n    console.log(step, '. targetBox position: ', camera, tPos);\n    camera.lookAt(tPos);\n\n    if (step === 0) {\n        targetPos = new THREE.Vector3(0, 0, 0);\n        tweenCamera(camera, cameraInitPos, targetBox, targetPos);\n    } else if (step === 1) {\n        // camTarget = new THREE.Vector3(0, 50, 0);\n        targetPos = new THREE.Vector3(0, 50, 0);\n        tweenCamera(camera, { x: 0, y: -10, z: 40 }, targetBox, targetPos);\n    } else if (step === 2) {\n        targetPos = new THREE.Vector3(0, 50, 0);\n        tweenCamera(camera, { x: 0, y: -10, z: 40 }, targetBox, targetPos);\n    }else if (step === 3) {\n        targetPos = new THREE.Vector3(0, 50, 0);\n        tweenCamera(camera, { x: 0, y: -10, z: 40 }, targetBox, targetPos);\n    }else if (step === 4) {\n        targetPos = new THREE.Vector3(0, 50, 0);\n        tweenCamera(camera, { x: 0, y: -5, z: 70 }, targetBox, targetPos);\n    } else if (step === 5) {\n        targetPos = new THREE.Vector3(0, 0, 0);\n        tweenCamera(camera, { x: 0, y: 60, z: 250 }, targetBox, targetPos);\n    }\n\n    camera.updateProjectionMatrix();\n    useFrame(state => {\n        TWEEN.update();\n        camera.lookAt(targetBox.position);\n        // camera.lookAt(camTarget);\n    });\n\n    return null;\n};\n\nfunction tweenCamera(camera, cameraPos, targetBox, targetPos) {    \n    let pos = camera.position;\n    let tPos = targetBox ? targetBox.position : new THREE.Vector3(0, 0, 0);\n    console.log(\"tweencamera, camera Pos: \", pos);\n\n    new TWEEN.Tween(pos)\n        .to({ x: cameraPos.x, y: cameraPos.y, z: cameraPos.z }, 1000)\n        .easing(TWEEN.Easing.Quadratic.Out)\n        .onUpdate(function() {})\n        .start();\n\n    new TWEEN.Tween(tPos)\n        .to({ x: targetPos.x, y: targetPos.y, z: targetPos.z }, 1000)\n        .easing(TWEEN.Easing.Quadratic.Out)\n        .onUpdate(function() {\n            // console.log('tweening camera, xyz: ',pos.x, pos.y, pos.z )\n        })\n        .start();\n}\n\nfunction UpdateCamera(props) {\n    const { step } = props; // step\n    return (\n        <ChangeCamera step={step} />\n    );\n}\n\nexport default UpdateCamera;\n","// import { Box} from \"@react-three/drei\";\nimport React, { Suspense, useRef } from \"react\";\nimport { Canvas, useThree, useFrame, extend } from \"@react-three/fiber\";\nimport Points from \"./Points\";\nimport Cloud from \"./Cloud\";\nimport FlashLight from \"./FlashLight\";\n// import { useFrame } from \"@react-three/fiber\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { GizmoHelper, GizmoViewport } from \"@react-three/drei\";\n// https://docs.pmnd.rs/react-three-fiber/API/objects\nimport UpdateCamera from './UpdateCamera';\n\nextend({ OrbitControls });\n\nfunction Scene(props){    \n    const {step} = props; // step\n    // let cameraPos = {\n    //     fov: 60,\n    //     near: 0.1,\n    //     far: 1000,\n    //     position: [0, 0, 10],\n    //     // rotation: [1.16, -0.12, 0.27]\n    // };\n\n    // const CameraControls = () => {\n    //     // Get a reference to the Three.js Camera, and the canvas html element.\n    //     // We need these to setup the OrbitControls component.\n    //     // https://threejs.org/docs/#examples/en/controls/OrbitControls\n    //     const {\n    //         camera,\n    //         gl: { domElement }\n    //     } = useThree();\n    //     // Ref to the controls, so that we can update them on every frame using useFrame\n    //     const controls = useRef();\n    //     useFrame(state => controls.current.update());\n    //     return <orbitControls ref={controls} args={[camera, domElement]} />;\n    // };\n\n    // set up camera init here\n    return (\n        <Canvas camera={{ position: [0, 60, 250] }}> \n            {/* <OrbitControls /> */}\n            <GizmoHelper\n                alignment=\"bottom-right\" // widget alignment within scene\n                margin={[80, 80]} // widget margins (X, Y)\n            >\n                <GizmoViewport\n                    axisColors={[\"red\", \"green\", \"blue\"]}\n                    labelColor=\"black\"\n                />\n            </GizmoHelper>\n            <mesh name={\"cameraTarget\"} visible={false} position={[0, 0, 0]}>\n                <boxGeometry args={[1, 1, 1]} />\n                <meshBasicMaterial color=\"black\" />\n            </mesh>\n            <UpdateCamera step={step} />\n\n            <FlashLight />\n            <ambientLight color=\"#555555\" />\n            <directionalLight color=\"#ffeedd\" position={[0, 0, 1]} />\n            <pointLight\n                args={[0x062d89, 30, 500, 1.7]}\n                position={[200, 300, 100]}\n            />\n\n            <Suspense fallback={null}>\n                <Points step={step} />\n                <Cloud position={[0, 500, -250]} />\n                <Cloud position={[100, 500, -100]} />\n                <Cloud position={[-75, 500, 50]} />\n            </Suspense>\n            {/* <fogExp2 attach=\"fogExp2\" args={[\"white\", 0.002]} /> */}\n        </Canvas>\n    );\n}\n\n\nexport default Scene;\n","import React, { useState } from \"react\";\nimport { Scrollama, Step } from \"react-scrollama\";\nimport Timeline from './Timeline';\nimport Scene from \"./Scene\";\nimport data from '../data/copy.json';\n\nfunction ScrollCtn(){\n    const [currentStepIndex, setCurrentStepIndex] = useState(null);\n    const [fullProgress, setFullProgress] = useState(0);\n    // This callback fires when a Step hits the offset threshold. It receives the\n    // data prop of the step, which in this demo stores the index of the step.\n    let stepData = data.content.filter(t=>t.type==='step');\n    let step = stepData[0].value;\n\n    const onStepEnter = ({ data }) => {\n        console.log(\"onStepEnter: \", data);\n        setCurrentStepIndex(data);\n    };\n\n    const onStepProgress = ({ data, progress, direction }) => {\n        // setCurrentStepIndex(data);\n        if(data!= null){\n            let full = data + (+(progress).toFixed(3));\n            setFullProgress(full);\n            console.log(\"full_progress: \", full);\n        }\n    };\n\n    return (\n        <div style={{ margin: \"0 0\" }}>\n            <div\n                id=\"graphic_ctn_outer\"\n                style={{\n                    position: \"sticky\",\n                    top: 0,\n                    height: \"100vh\"\n                }}\n            >\n                {/* <Timeline step={currentStepIndex} /> */}\n                <section id=\"graphic_ctn\">\n                    <Scene step={currentStepIndex} progress={fullProgress} />\n                </section>\n            </div>\n            <Scrollama\n                // progress\n                // onStepProgress={onStepProgress}\n                onStepEnter={onStepEnter}\n                threshold={40}\n                offset={0.5}\n            >\n                {step.map((_, stepIndex) => (\n                    <Step data={stepIndex} key={stepIndex}>\n                        <div\n                            style={{\n                                margin: \"5vh 0\",\n                                padding: \"40vh 1rem\",\n                                width: \"20rem\",\n                                opacity:\n                                    currentStepIndex === stepIndex ? 1 : 0.2\n                            }}\n                        >\n                            <div\n                                className=\"scroll-inner\"\n                                style={{\n                                    padding: \"0rem 1rem\",\n                                    background: \"rgba(0, 0, 0, 0.8)\",\n                                    border: \"1px white solid\"\n                                }}\n                            >\n                                <h4>{_[\"date\"]}</h4>\n                                <p>{_[\"text\"]}</p>\n                            </div>\n                        </div>\n                    </Step>\n                ))}\n            </Scrollama>\n        </div>\n    );\n};\n\nexport default ScrollCtn;\n","import React, { Component } from \"react\";\n\nclass Credits extends Component {\n\n  render() {\n    return (\n      <section className=\"credits-section\">\n        <h2 id=\"credit-title\">Credits</h2>\n        <p className= \"credits\"><span className=\"job\">Reporting:</span> Ted Sherman is an enterprise and investigations reporter assigned to the Statehouse Bureau. Email him at <a href=\"mailto:tsherman@njadvancemedia.com\">tsherman@njadvancemedia.com</a> or connect with him on Twitter <a href=\"https://twitter.com/TedShermanSL\" rel=\"noopener noreferrer\" target=\"_blank\">@TedShermanSL.</a></p>\n        <p className= \"credits\"><span className=\"job\">Design and Development:</span> Cassidy Grom is a designer and reporter. Email her at <a href=\"mailto:cgrom@njadvancemedia.com\">cgrom@njadvancemedia.com</a> or connect with her on Twitter <a href=\"https://twitter.com/CassidyGrom\" rel=\"noopener noreferrer\" target=\"_blank\">@CassidyGrom.</a></p>\n        <p className= \"credits\"><span className=\"job\">Design and Development:</span> Arjun Kakkar is a developer and designer specializing in data visualization. Email him at <a href=\"mailto:akakkar@njadvancemedia.com\">akakkar@njadvancemedia.com</a> or connect with him on Twitter <a href=\"https://twitter.com/ArjunKakkar15\" rel=\"noopener noreferrer\" target=\"_blank\">@ArjunKakkar15.</a></p>\n        <p className= \"credits\"><span className=\"job\">Project Editors:</span> Ashleigh Graf and Christopher Kelly</p>\n        <p className= \"credits\"><span className=\"job\">Photos and videos:</span> Newsroom stock footage (Penn Station), Storyblocks stock footage (aerial shot, wine stains, airplane, Broadway), Patti Sapone (NJ transit train), Joe Fusco (family photos), Andre Malok (beach).</p>\n        <p className= \"credits\"><span className=\"job\">Additional contributors:</span> Alyssa Passeggio</p>\n      </section>\n    );\n  }\n}\n\nexport default Credits;","import React, { Component } from \"react\";\nimport Intro from \"./Intro\";\nimport ScrollCtn from './ScrollCtn';\n\n// import Scrolly from \"./Scrolly\";\n// import Video from \"./Video\";\n// import Text from \"./Text\";\nimport Credits from \"./Credits\";\nimport copy from \"../data/copy.json\";\n\nclass Main extends Component {\n  render() {\n    return (\n      <main>\n        <Intro />\n        <ScrollCtn />\n        <Credits data={copy[\"credits-section\"]} />\n      </main>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport copy from \"../data/copy.json\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchValue: \"search\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ searchValue: event.target.value });\n  }\n\n  handleSubmit(event) {\n    window.open(`https://nj.com/search?q=${this.state.searchValue}`);\n    event.preventDefault();\n  }\n\n  render() {\n    let njdcLinks = [];\n\n    for (const link in copy.navbarLinks) {\n      const current = copy.navbarLinks[link];\n      njdcLinks.push(\n        <a\n          key={link}\n          href={current.link}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {current.text}\n        </a>\n      );\n    }\n\n    function facebookShare() {\n      window.open(\n        `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(\n          copy.social.site_url\n        )}`,\n        \"facebook-share-dialog\",\n        \"width=626,height=436\"\n      );\n      return false;\n    }\n\n    return (\n      <section id=\"navbar\">\n        <div className=\"navbar-logo\">\n          <a\n            href=\"https://www.nj.com/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img\n              src=\"./assets/images/njdotcomlogowhite.png\"\n              alt=\"nj.com logo\"\n              style={{ padding: `5px 0px 4px 5px`, width: `50px` }}\n            />\n          </a>\n        </div>\n        <div className=\"navbar-social\">\n          <div className=\"button-container\">\n            <a\n              href=\"https://www.nj.com/digitalsubscription/inline/?utm_source=INL&utm_medium=ACQ-ADH0-1030a&utm_campaign=ACQ\"\n              className=\"sub-button\"\n            >\n              subscribe\n            </a>\n          </div>\n          <a href=\"/\" onClick={facebookShare} className=\"social-button nav-soc\">\n            <img\n              src=\"./assets/images/white-facebook.png\"\n              alt=\"share using facebook\"\n              style={{ padding: `17px 8px 12px 13px`, height: `87%` }}\n            />\n          </a>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={`https://twitter.com/intent/tweet?url=${copy.social.site_url}&text=${copy.social.description}`}\n            data-size=\"large\"\n            className=\"social-button nav-soc\"\n          >\n            <img\n              src=\"./assets/images/white-Twitter.png\"\n              alt=\"share using twitter\"\n              style={{ padding: `12px 5px 2px 5px`, height: `80%` }}\n            />\n          </a>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={`mailto:?subject=${copy.social.email_subj}&body=${copy.social.email_body}`}\n            className=\"social-button nav-soc\"\n          >\n            <img\n              src=\"./assets/images/envelope.png\"\n              alt=\"share using email\"\n              style={{ padding: `14px 9px 2px 5px`, height: `75%` }}\n            />\n          </a>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react'\nimport Main from \"./Main\"\nimport Navbar from \"./Navbar\"\n\nclass App extends Component {\n    render() {\n        return(\n            <div className=\"App\">\n                    <Navbar />\n                    <Main />\n            </div>\n        )\n    }\n}\n\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./js/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}