{"version":3,"sources":["js/Intro.js","js/Timeline.js","js/RainShader.js","js/stepAttr.js","js/Points.js","js/FlashLight.js","js/UpdateCamera.js","js/Scene.js","js/headContainer.js","js/data.js","js/SoundControl.js","js/Step.js","js/Audio.js","js/DeathTollDiv.js","js/MainCtn.js","js/Main.js","js/Credits.js","js/Navbar.js","js/App.js","index.js"],"names":["Component","Timeline","RainShader","vertexShader","fragmentShader","stepPoint","step","num","Points","props","uNowTime","COUNT","startTime","stepNum","mesh","useRef","mat","useLoader","TextureLoader","pointTexture","useFrame","state","delta","rainDrop","current","material","uniforms","uTime","value","clock","elapsedTime","uOldTime","oldTime","vertices","aSpeed","aRandom","death_to_date","newDeathsPerWeek","push","i","t","Math","PI","random","u","r","x","cos","y","sin","z","whichWeek","getRank","randomNumArr","idx","arr","rank","length","indexOf","ref","attach","attachObject","count","array","Float32Array","itemSize","onUpdate","self","needsUpdate","verticesNeedUpdate","transparent","depthTest","args","blending","THREE","uniforms-uTime","uniforms-uOldTime","uniforms-uNowTime","uniforms-uStartTime","uniforms-pointTexture","uniforms-uLastHighlight","uniforms-uHighlight","FlashLight","Light","flash","power","position","set","ChangeCamera","useThree","camera","scene","fov","near","far","targetBox","getObjectByName","targetPos","tPos","lookAt","tweenCamera","updateProjectionMatrix","TWEEN","update","cameraPos","pos","Tween","to","easing","Easing","Quadratic","Out","start","UpdateCamera","extend","OrbitControls","Scene","name","visible","color","fallback","performance","now","HeadContainer","prop","onClickFn","currentStepIndex","className","id","onClick","src","animationTime","SoundControl","onSouncControlClick","audioEnabled","circleRef","useState","inHover","setHover","useEffect","aTime","cur_Circle","select","attr","transition","duration","ease","easeLinear","onMouseEnter","onMouseLeave","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","strokeDasharray","strokeDashoffset","transform","points","d","x1","y1","x2","y2","Step","data","stepIndex","data-step","key","Audio","audioRef","DeathTollDiv","data-target","style","fontSize","MainCtn","setCurrentStepIndex","content","filter","type","stepCtnRef","setAudioEnabled","children","forEach","child","classList","add","contains","remove","showStep","muted","document","querySelector","console","log","play","timer","loop","setTimeout","clearTimeout","top","map","Main","Navbar","searchValue","handleChange","bind","handleSubmit","event","this","setState","target","window","open","preventDefault","njdcLinks","link","copy","navbarLinks","href","rel","text","alt","padding","encodeURIComponent","social","site_url","description","data-size","email_subj","email_body","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4c743b45.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport copy from \"../data/copy.json\";\n\nclass Intro extends Component {\n  state = { scrolly: [] };\n\n\n  render() {\n    return (\n      <section id=\"intro\">\n        <div id=\"intro-scrolly-container\">\n          {this.state.scrolly}\n          <div id=\"title-container\">\n            <h1 id=\"title\" className=\"intro-transition-content\">\n              {copy.title}\n            </h1>\n            <h2 id=\"subtitle\" className=\"intro-transition-content\">\n              {copy.subtitle}\n            </h2>\n            <h3 id=\"byline\" className=\"intro-transition-content\">\n              {copy.byline}\n            </h3>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Intro;\n","import React, { useState, useRef } from \"react\";\n\n\nfunction Timeline(prop){\n    let {step, currentDate } = prop;\n    console.log(\"Timeline\", step);\n    let [dateLabel, setDateLabel] = useState(\"Mar. '20\");\n    let [val, setVal] = useState(0);\n    // let {slider, setSlider} = useState(0);\n    const timeLabels = [\"Mar. '20\", \"Apr. '20\", \"May '20\", \"Jun. '20\", \"Jul. '20\", \"Aug. '20\", \"Sep. '20\", \"Oct. '20\", \"Nov. '20\", \"Dec. '20\", \"Jan. '21\", \"Feb. '21\",\n    \"Mar. '21\", \"Apr. '21\", \"May '21\", \"Jun. '21\", \"Jul. '21\", \"Aug. '21\", \"Sep. '21\", \"Oct. '21\", \"Nov. '21\", \"Dec. '21\", \"Jan. '22\", \"Feb. '22\",\"Mar. '22\"\n    ];\n\n\n    function onChange(ev){\n        const val = ev.target.value;\n        // ev.value = val;\n        setVal(val);\n        dateLabel = setDateLabel(timeLabels[val])\n        console.log('val', val)\n    }\n\n    return (\n            <div className=\"timeline\">\n                <input type=\"range\" name=\"DateSlider\" id=\"DateSlider\" \n                min=\"0\" max=\"24\" step=\"1\" value={ (!step? 0: (step==5)? timeLabels.length:step ) } onChange={onChange} />\n                <label id=\"dateLabelCtn\">{dateLabel}</label>\n                <div className='label' id=\"dateStart\">Mar. '20</div>\n                <div className='label' id=\"dateEnd\">Mar. '22</div>\n            </div>\n    );\n}\n\nexport default Timeline;","const RainShader = {\n    vertexShader: `\n    #define PI 3.14159265359\n    uniform float uTime;\n    uniform float uHighlight;\n    uniform float uOldTime;\n    uniform float uNowTime;\n    uniform float uStartTime;\n    uniform float uLastHighlight;\n    attribute vec3 aSpeed;\n    attribute vec2 aRandom;\n\n    vec3 mod289(vec3 x) {\n      return x - floor(x * (1.0 / 289.0)) * 289.0;\n    }\n\n    vec2 mod289(vec2 x) {\n      return x - floor(x * (1.0 / 289.0)) * 289.0;\n    }\n\n    vec3 permute(vec3 x) {\n      return mod289(((x*34.0)+1.0)*x);\n    }\n\n    float snoise(vec2 v){\n      const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                          0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                        -0.577350269189626,  // -1.0 + 2.0 * C.x\n                          0.024390243902439); // 1.0 / 41.0\n    // First corner\n      vec2 i  = floor(v + dot(v, C.yy) );\n      vec2 x0 = v -   i + dot(i, C.xx);\n\n    // Other corners\n      vec2 i1;\n      //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n      //i1.y = 1.0 - i1.x;\n      i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n      // x0 = x0 - 0.0 + 0.0 * C.xx ;\n      // x1 = x0 - i1 + 1.0 * C.xx ;\n      // x2 = x0 - 1.0 + 2.0 * C.xx ;\n      vec4 x12 = x0.xyxy + C.xxzz;\n      x12.xy -= i1;\n\n    // Permutations\n      i = mod289(i); // Avoid truncation effects in permutation\n      vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n        + i.x + vec3(0.0, i1.x, 1.0 ));\n\n      vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n      m = m*m ;\n      m = m*m ;\n      vec3 x = 2.0 * fract(p * C.www) - 1.0;\n      vec3 h = abs(x) - 0.5;\n      vec3 ox = floor(x + 0.5);\n      vec3 a0 = x - ox;\n      m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n    // Compute final noise value at P\n      vec3 g;\n      g.x  = a0.x  * x0.x  + h.x  * x0.y;\n      g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n      return 130.0 * dot(m, g);\n    }\n\n    vec3 getCurvePosition(float posX, float posY, float posZ){\n        float noiseScale = 0.005;\n        float newPosY = snoise( vec2( posX * noiseScale + ( uTime/10.) , posZ * noiseScale+ ( uTime/10. ) ) );\n        vec3 newPos = vec3(0.);\n        newPos.x = posX + aRandom.x *5.;\n        newPos.z = posZ + sin(aRandom.y) *5.;\n        newPos.y = newPosY * 30.;\n        return newPos;\n    }\n\n    void main() {\n        float posX = position.x;\n        float posY = position.y;\n        float posZ = position.y;\n        vec4 mvPosition = vec4(0.);\n        float timeChanged = uTime*2.;\n        float timer = smoothstep( 0.0, 2.0, timeChanged);\n        vec3 newPos = getCurvePosition(posX, posY, posZ);\n        \n        vec3 transformed = vec3(newPos.x, newPos.y+120., newPos.z-80.);\n        vec3 transformedNew = transformed.xyz;\n        float padding = 5.0;\n        vec4 finalFinalPos = vec4(0.);\n\n        if(uHighlight == 0.){\n          vec3 finalPos = mix(position, newPos, timer);\n          finalFinalPos = vec4(finalPos, 1.0);\n        } else if(uHighlight == 9.){ \n          vec3 temp_pos= vec3((-200. + aSpeed.y * padding + aRandom.x*2.), -280. + (aRandom.y * aSpeed.z/30.), 0.);\n          vec3 fPos = mix(temp_pos, newPos, timer);\n          finalFinalPos = vec4(fPos, 1.0);\n        } else {\n          // index, rank, newDeathsPerWeek\n          float yPadding = aSpeed.z/5.;\n          float timer2 = smoothstep( (6.0 - mod( aSpeed.y, 12.) *.5) * aRandom.x, 10.0, (uOldTime - uNowTime)*0.002 ); \n          if(aSpeed.x < uLastHighlight){\n            // old dots fall into a shape\n            transformedNew.y = -300.; // index; week; num \n            transformedNew.x = -200. + aSpeed.y * padding + aRandom.x*2.;\n            transformedNew.z = -100.- aRandom.y * yPadding;\n            // transformedNew = mix(vec3(transformed.x, transformed.y-500.-mod(aSpeed.y, 12.)*100.-aRandom.y*100., transformed.z), \n            // vec3(-200. + aSpeed.y * padding + aRandom.x*2., -300., -100.- aRandom.y * yPadding), smoothstep(aRandom.x, 2.0, (uOldTime - uNowTime)*0.002 ));\n          } else if(aSpeed.x >= uLastHighlight && aSpeed.x <uHighlight){            \n            \n            transformedNew = mix(transformed, vec3(transformed.x, transformed.y-500.-mod(aSpeed.y, 12.)*100.-aRandom.y*100., transformed.z), timer2);\n            // float xPos = -200. + aSpeed.y * padding + aRandom.x*2.;\n            // transformedNew = mix(transformed, vec3(xPos, -300, -100. - (aRandom.y * yPadding) ), timer2);\n          } \n            finalFinalPos =  vec4( transformedNew, 1.0 );\n        }\n\n        mvPosition = modelViewMatrix * finalFinalPos;\n        gl_Position = projectionMatrix * mvPosition;\n        // gl_PointSize =  800.0 / -mvPosition.z  * max(abs(sin(uTime*2. +posY)), 0.4) + 4. ;\n        gl_PointSize =  800.0 / -mvPosition.z + 2.;\n    }\n  `,\n    fragmentShader: `\n    uniform sampler2D pointTexture;\n    uniform float uTime;\n\n    float map(float value, float oldMin, float oldMax, float newMin, float newMax) {\n        return newMin + (newMax - newMin) * (value - oldMin) / (oldMax - oldMin);\n    }\n    float rand(vec2 co){\n      return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n    }\n    void main() {\n        vec3 color = vec3(1.0, 1.0, 1.0);\n        vec2 toCenter = (gl_PointCoord.xy - 0.5) * 3.0;\n        float len = length(toCenter);\n        float a = 1.0 - len;\n        gl_FragColor = vec4(color, a);\n\n      // vec3 color = vec3(1.0,1.0,1.0);\n      // gl_FragColor = vec4(color, 0.7);\n      // gl_FragColor = gl_FragColor * texture2D( pointTexture, gl_PointCoord );\n    }\n  `\n};\n\n//   fragmentShader: `\n//   uniform sampler2D pointTexture;\n//   void main() {\n//       vec3 color = vec3(1.0,1.0,1.0);\n//       gl_FragColor = vec4(color, 0.8);\n//       gl_FragColor = gl_FragColor * texture2D( pointTexture, gl_PointCoord );\n//   }\n// `\n\n// void main() {\n// vec3 transformed = position.xyz;\n// float velocity = -50.0 + aSpeed.x *40.0;\n// float cycle = mod(uTime, 50.0);\n// if(aSpeed.z <= uHighlight){\n//   transformed.y += (velocity * cycle);\n// } else {\n//   transformed.y = -400.0;\n// }\n//         vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n//         gl_Position = projectionMatrix * mvPosition;\n//     }\nexport { RainShader };\n","// export const stepPoint = [\n//     { week: 0, num: 0 },\n//     { week: 1, num: 3 },\n//     { week: 2, num: 7 },\n//     { week: 3, num: 11 },\n//     { week: 4, num: 15 },\n//     { week: 5, num: 19 }\n// ];\n\nexport const stepPoint = [\n           { step: 0, num: 0 },\n           { step: 1, num: 1 },\n           { step: 2, num: 10 },\n           { step: 3, num: 14391 }, // by June 19\n           { step: 4, num: 15334 }, // by Sep 22\n           { step: 5, num: 19246 }, // by Dec 20\n           { step: 6, num: 22709 }, //by Mar. 19\n           { step: 7, num: 23803 }, // by Jun. 19\n           { step: 8, num: 23820 } // by July 16 \n       ];\n","import React, { useRef } from \"react\";\nimport { useFrame, useLoader } from \"@react-three/fiber\";\nimport { RainShader } from \"./RainShader\";\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\nimport { stepPoint } from \"./stepAttr\";\nimport * as THREE from 'three';\nimport randomNumArr from \"../data/randomArr.json\";\n\nfunction Points(props) {\n    // This reference will give us direct access to the THREE.Mesh object\n    let { step, uNowTime, COUNT, startTime } = props;\n    const stepNum = !stepPoint[step]? 0.0: stepPoint[step]['num'];\n    const lastStepNum = (!step || step < 1) ? 0.0 : stepPoint[step - 1][\"num\"];\n    // console.log(\"points stepNum, lastStepNum\", step, stepNum, lastStepNum); // 1,1,0\n    const mesh = useRef(); \n    const mat = useRef();\n    // Set up state for the hovered and active state\n    const [pointTexture] = useLoader(TextureLoader, [\n        \"./assets/images/raindrop_img.png\"\n    ]);\n\n    // Subscribe this component to the render-loop, rotate the mesh every frame\n    useFrame((state, delta) =>{\n        const rainDrop = mesh.current;\n        const material = mat.current;\n        if (rainDrop) { // update uTime, uOldTime\n            // rainDrop.rotation.y += 0.0001;\n            material.uniforms.uTime.value = state.clock.elapsedTime;\n            material.uniforms.uOldTime.value = state.clock.oldTime;\n            \n            // console.log(\"uOldTime-startTime: \", state.clock.oldTime - startTime);\n            // console.log('step: ', step, \"uTime: \", state.clock.elapsedTime);\n            // console.log(\"material.uniforms.uTime\", material.uniforms.uTime, material.uniforms.uStartTime, material.uniforms.uOldTime);\n        }\n    });\n\n    // Return the view, these are regular Threejs elements expressed in JSX\n    const vertices = [], aSpeed=[], aRandom=[];\n    const death_to_date = [1,3,44,267,1232,2805,4753,6442,8244,9508,10586,11191,11770,12303,12727,12949,13181,13425,13635,13763,13905,13982,14037,14086,14124,14170,14213,14254,14285,14326,14360,14394,14438,14517,14582,14661,14817,15007,15254,15590,16004,16418,16832,17361,17980,18421,18984,19455,19916,20251,20689,20990,21238,21492,21727,21951,22132,22372,22614,22849,23033,23201,23350];\n    const newDeathsPerWeek = [1,2,41,223,975,1584,1954,1709,1821,1287,1109,624,592,553,435,248,246,250,218,136,147,82,60,52,45,50,45,41,32,44,34,39,46,80,66,81,157,192,250,344,431,415,421,532,632,455,572,480,467,338,442,306,228,231,256,217,203,246,242,235,195,184,143];\n    vertices.push(0.0, 200.0, 0.0);\n    aSpeed.push(0.001, 0, 0);// index, rank, newDeathsPerWeek\n    aRandom.push(0.005, 0.005);\n    let arrTest =[], arrTest2=[];\n    //let testArr = [0];\n    for (let i = 1; i < COUNT; i++) {\n        const R = 400;\n        // const x = (Math.random() * 100 - 50) * Math.sin(Math.random());\n        // const y = Math.random() * 400 - 200;\n        // const z = (Math.random() * 50 - 25) * Math.cos(Math.random());\n        let t = 2 * Math.PI * Math.random();\n        let u = Math.random() + Math.random();\n        let r = u>1? (2-u)*R: u*R;\n\n        const x = r * Math.cos(t);\n        const y = r* Math.sin(t);\n        const z = Math.random() * 800 - 400;\n\n        let whichWeek = getRank(i, death_to_date);\n        vertices.push(x, y, z);\n        aSpeed.push( i, whichWeek, newDeathsPerWeek[whichWeek]);\n        aRandom.push( randomNumArr[i], randomNumArr[i + COUNT] );\n\n    }\n    // console.log(\"!!!!arrTest\", aSpeed, aRandom);\n\n    function getRank(idx, arr){\n        let rank = 0;\n        for(let i=0; i<arr.length-1; i++){\n            if(idx>=arr[i] && idx<arr[i+1]){\n                rank = arr.indexOf(arr[i+1]);\n            } \n        }\n        return rank\n    }\n\n    // console.log(\"points running: \", mesh, aSpeed);\n    return (\n        <points ref={mesh}>\n            <bufferGeometry attach=\"geometry\">\n                <bufferAttribute\n                    attachObject={[\"attributes\", \"position\"]}\n                    count={vertices.length / 3}\n                    // this renders the dots fine\n                    array={new Float32Array(vertices)}\n                    itemSize={3}\n                    onUpdate={self => {\n                        self.needsUpdate = true;\n                        self.verticesNeedUpdate = true;\n                    }}\n                />\n                <bufferAttribute\n                    attachObject={[\"attributes\", \"aSpeed\"]}\n                    count={aSpeed.length / 3}\n                    array={new Float32Array(aSpeed)}\n                    itemSize={3}\n                />\n                <bufferAttribute\n                    attachObject={[\"attributes\", \"aRandom\"]}\n                    count={aRandom.length / 2}\n                    array={new Float32Array(aRandom)}\n                    itemSize={2}\n                />\n            </bufferGeometry>\n\n            <shaderMaterial\n                attach=\"material\"\n                transparent={true}\n                depthTest={false}\n                ref={mat}\n                args={[RainShader]}\n                blending={THREE.AdditiveBlending}\n                uniforms-uTime={{ value: 0 }}\n                uniforms-uOldTime={{ value: 0 }}\n                uniforms-uNowTime={{ value: uNowTime }}\n                uniforms-uStartTime={{ value: startTime }}\n                uniforms-pointTexture={{ value: pointTexture }}\n                uniforms-uLastHighlight={{\n                    value: !step || step < 1 ? 0.0 : stepPoint[step - 1][\"num\"]\n                }}\n                uniforms-uHighlight={{ value: stepNum }}\n            />\n        </points>\n    );\n}\n\nexport default Points;\n","import React, { useRef } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\n\nfunction FlashLight(props) {\n    // This reference will give us direct access to the THREE.Mesh object\n    const Light = useRef();\n    // // Set up state for the hovered and active state\n    // const [hovered, setHover] = useState(false);\n    // const [active, setActive] = useState(false);\n    // // Subscribe this component to the render-loop, rotate the mesh every frame\n    useFrame((state, delta) =>{\n        let flash = Light.current;\n        if (Math.random() > 0.96 || flash.power > 100) {\n            if (flash.power < 100)\n                flash.position.set(\n                    Math.random() * 400,\n                    300 + Math.random() * 200,\n                    100\n                );\n            flash.power = 50 + Math.random() * 500;\n        }\n    });\n\n\n    return (\n        <pointLight\n            ref={Light}\n            args={[0x062d89, 30, 500, 1.7]}\n            position={[200, 300, 100]}\n        />\n    );\n}\n\nexport default FlashLight;\n","// import { Box} from \"@react-three/drei\";\nimport React from \"react\";\nimport { useThree, useFrame } from \"@react-three/fiber\";\nimport TWEEN from \"@tweenjs/tween.js\";\nimport * as THREE from \"three\";\n\nconst ChangeCamera = props => {\n    const { step } = props;\n    // let camTarget = new THREE.Vector3(0, 0, 0);\n    const {camera, scene } = useThree();\n    camera.fov = 60;\n    camera.near = 0.1;\n    camera.far = 1000;\n    // camera.rotation.x = 1.16;\n    // camera.rotation.y = -0.12;\n    // camera.rotation.z = 0.27;\n    // const cameraInitPos = { x: 0, y: 200, z: 450 };\n    // camera.lookAt(0, -40, -20);\n    //const cameraInitPos = { x: 0, y: 150, z: 400 };\n    const cameraInitPos = { x: 0, y: 100, z: 400 };\n    let targetBox = scene.getObjectByName(\"cameraTarget\");\n    let targetPos = new THREE.Vector3(0, 0, 0);\n    let tPos = targetBox ? targetBox.position : new THREE.Vector3(0, 0, 0);\n    // console.log(step, '. targetBox position: ', camera, tPos);\n    camera.lookAt(tPos);\n\n    if (step === 0 || step === 9) {\n        targetPos = new THREE.Vector3(0, 0, 0);\n        tweenCamera(camera, cameraInitPos, targetBox, targetPos);\n    } else {\n        // camTarget = new THREE.Vector3(0, 50, 0);\n        targetPos = new THREE.Vector3(0, 0, 0);\n        tweenCamera(camera, { x: 0, y: 0, z: 500 }, targetBox, targetPos);\n    } \n    // else if (step === 2) {\n    //     targetPos = new THREE.Vector3(0, 0, 0);\n    //     tweenCamera(camera, { x: 0, y: 0, z: 500 }, targetBox, targetPos);\n    // } else if (step === 3) {\n    //     targetPos = new THREE.Vector3(0, 0, 0);\n    //     tweenCamera(camera, { x: 0, y: 0, z: 500 }, targetBox, targetPos);\n    // } else if (step === 4) {\n    //     targetPos = new THREE.Vector3(0, 0, 0);\n    //     tweenCamera(camera, { x: 0, y: 0, z: 500 }, targetBox, targetPos);\n    // } else if (step === 5) {\n    //     targetPos = new THREE.Vector3(0, 0, 0);\n    //     tweenCamera(camera, { x: 0, y: 0, z: 500 }, targetBox, targetPos);\n    // } else if (step === 6) {\n    //     targetPos = new THREE.Vector3(0, 0, 0);\n    //     tweenCamera(camera, { x: 0, y: 0, z: 500 }, targetBox, targetPos);\n    // } else if (step === 7) {\n    //     targetPos = new THREE.Vector3(0, 0, 0);\n    //     tweenCamera(camera, { x: 0, y: 0, z: 500 }, targetBox, targetPos);\n    // } else if (step === 8) {\n    //     targetPos = new THREE.Vector3(0, 0, 0);\n    //     tweenCamera(camera, { x: 0, y: 0, z: 500 }, targetBox, targetPos);\n    // }\n\n    camera.updateProjectionMatrix();\n    useFrame(state => {\n        TWEEN.update();\n        camera.lookAt(targetBox.position);\n        // camera.lookAt(camTarget);\n    });\n\n    return null;\n};\n\nfunction tweenCamera(camera, cameraPos, targetBox, targetPos) {    \n    let pos = camera.position;\n    let tPos = targetBox ? targetBox.position : new THREE.Vector3(0, 0, 0);\n\n    new TWEEN.Tween(pos)\n        .to({ x: cameraPos.x, y: cameraPos.y, z: cameraPos.z }, 1000)\n        .easing(TWEEN.Easing.Quadratic.Out)\n        .onUpdate(function() {})\n        .start();\n\n    new TWEEN.Tween(tPos)\n        .to({ x: targetPos.x, y: targetPos.y, z: targetPos.z }, 1000)\n        .easing(TWEEN.Easing.Quadratic.Out)\n        .onUpdate(function() {\n            // console.log('tweening camera, xyz: ',pos.x, pos.y, pos.z )\n        })\n        .start();\n}\n\nfunction UpdateCamera(props) {\n    const { step } = props; // step\n    return (\n        <ChangeCamera step={step} />\n    );\n}\n\nexport default UpdateCamera;\n","// import { Box} from \"@react-three/drei\";\nimport { Line } from \"@react-three/drei\";\nimport React, { Suspense, useRef } from \"react\";\nimport { Canvas, useThree, useFrame, extend } from \"@react-three/fiber\";\nimport Points from \"./Points\";\nimport Cloud from \"./Cloud\";\nimport FlashLight from \"./FlashLight\";\n// import { useFrame } from \"@react-three/fiber\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { GizmoHelper, GizmoViewport } from \"@react-three/drei\";\n// https://docs.pmnd.rs/react-three-fiber/API/objects\nimport UpdateCamera from './UpdateCamera';\n\nextend({ OrbitControls });\n\nfunction Scene(props){    \n    const { step, COUNT, randomNumArr, startTime } = props; // step\n    // let cameraPos = {\n    //     fov: 60,\n    //     near: 0.1,\n    //     far: 1000,\n    //     position: [0, 0, 10],\n    //     // rotation: [1.16, -0.12, 0.27]\n    // };\n\n    // const CameraControls = () => {\n    //     // Get a reference to the Three.js Camera, and the canvas html element.\n    //     // We need these to setup the OrbitControls component.\n    //     // https://threejs.org/docs/#examples/en/controls/OrbitControls\n    //     const {\n    //         camera,\n    //         gl: { domElement }\n    //     } = useThree();\n    //     // Ref to the controls, so that we can update them on every frame using useFrame\n    //     const controls = useRef();\n    //     useFrame(state => controls.current.update());\n    //     return <orbitControls ref={controls} args={[camera, domElement]} />;\n    // };\n    \n\n    // set up camera init here\n    return (\n        <Canvas camera={{ position: [0, 0, 500] }}>\n            {/* <OrbitControls /> */}\n            {/* <GizmoHelper\n                alignment=\"bottom-right\" // widget alignment within scene\n                margin={[80, 80]} // widget margins (X, Y)\n            >\n                <GizmoViewport\n                    axisColors={[\"red\", \"green\", \"blue\"]}\n                    labelColor=\"black\"\n                />\n            </GizmoHelper> */}\n            <mesh name={\"cameraTarget\"} visible={false} position={[0, 0, 0]}>\n                <boxGeometry args={[1, 1, 1]} />\n                <meshBasicMaterial color=\"black\" />\n            </mesh>\n            <UpdateCamera step={step} />\n\n            <FlashLight />\n            <ambientLight color=\"#555555\" />\n            <directionalLight color=\"#ffeedd\" position={[0, 0, 1]} />\n            <pointLight\n                args={[0x062d89, 30, 500, 1.7]}\n                position={[200, 300, 100]}\n            />\n\n            {/* <Line\n                points={[[-200, -220.0, 0], [200, -220.0, 0]]}\n                color={'#fff'}\n                lineWidth={1}\n                dashed={false}\n            /> */}\n\n            <Suspense fallback={null}>\n                <Points\n                    step={step}\n                    uNowTime={performance.now()}\n                    COUNT={COUNT}\n                    randomNumArr={randomNumArr}\n                    startTime={startTime}\n                />\n\n                {/* <Cloud position={[0, 500, -250]} />\n                <Cloud position={[100, 500, -100]} />\n                <Cloud position={[-75, 500, 50]} /> */}\n            </Suspense>\n            {/* <fogExp2 attach=\"fogExp2\" args={[\"white\", 0.002]} /> */}\n        </Canvas>\n    );\n}\n\n\nexport default Scene;\n","import React from \"react\";\n\nfunction HeadContainer(prop) {\n    const { onClickFn, currentStepIndex } = prop;\n    return (\n        <div className={`head_ctn ${!currentStepIndex? 'active': ''}`}>\n            <h1 className=\"headline whiteTextShadow\">N.J. Covid Memorial</h1>\n            <p className=\"dek whiteTextShadow\">\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n                eiusmod tempor incididunt ut labore et dolore magna aliqua.\n            </p>\n            <h5>Experience with sound</h5>\n            <div className=\"intro_buttonCtn\">\n                <button className=\"intro_button\" id=\"start_btn\" onClick={onClickFn}>\n                    <span className=\"soundIcon\">\n                        <img src=\"./assets/images/feather-volume-2.svg\" />\n                    </span>\n                    Start\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default HeadContainer;\n","export const animationTime = [5, 6, 6, 10, 10, 10, 10, 10, 10, 10];","import React, {useRef, useEffect, useState} from \"react\";\nimport { animationTime } from \"./data.js\";\nimport {select} from 'd3-selection';\nimport { transition } from 'd3-transition';\nimport {easeLinear} from 'd3-ease';\n\nfunction SoundControl(props) {\n    const { step, onSouncControlClick, audioEnabled } = props;\n    const circleRef = useRef();\n    const [inHover, setHover] = useState(false);\n\n    useEffect(()=>{\n        const aTime = animationTime[step];\n        const cur_Circle = circleRef.current;\n        if(step==null) return\n        // change the stroke\n        select(cur_Circle)\n            .attr(\"stroke-dashoffset\", -120)\n            .transition()\n            .duration(aTime * 1000 - 50)\n            .ease(easeLinear)\n            // make the duration 50ms less, to leave time for it to finish\n            // otherwise the second would play before the first ends, which cancel out the first\n            .attr(\"stroke-dashoffset\", 0);\n\n    }, [step])\n\n    return (\n        <div\n            className={`sound_control_ctn ${step == null ? \"\" : \"active\"}`}\n            onClick={onSouncControlClick}\n            onMouseEnter={() => setHover(true)}\n            onMouseLeave={() => setHover(false)}\n        >\n            <div className={ `sound_control_tooltip ${inHover? 'active':''}` }>\n                {audioEnabled ? \"Disable audio\" : \"Enable audio\"}\n            </div>\n            <svg\n                width=\"40\"\n                height=\"40\"\n                viewBox=\"0 0 40 40\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className=\"feather feather-volume-2\"\n            >\n                <circle\n                    cx=\"20\"\n                    cy=\"20\"\n                    r=\"19\"\n                    strokeDasharray=\"120\"\n                    strokeDashoffset=\"-120\"\n                    ref={circleRef}\n                />\n                <polygon\n                    transform=\"translate(8, 8)\"\n                    points=\"11 5 6 9 2 9 2 15 6 15 11 19 11 5\"\n                />\n                {!audioEnabled && (\n                    <path\n                        transform=\"translate(8, 8)\"\n                        d=\"M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07\"\n                    />\n                )}\n                {audioEnabled && (\n                    <g transform=\"translate(8, 8)\">\n                        <line x1=\"23\" y1=\"9\" x2=\"17\" y2=\"15\" />\n                        <line x1=\"17\" y1=\"9\" x2=\"23\" y2=\"15\" />\n                    </g>\n                )}\n            </svg>\n        </div>\n    );\n}\n\nexport default SoundControl;\n","import React from \"react\";\n\nfunction Step(props) {\n    let { data, stepIndex, currentStepIndex } = props;\n\n    return (\n        <div\n            className={`step__outer step__outer__${stepIndex}`}\n            data-step={stepIndex}\n            key={`step__outer__${stepIndex}`}\n        >\n            <div\n                className={`step__inner step__inner__${stepIndex}`}\n                key={`step__inner__${stepIndex}`}\n            >\n                <p key={`step__inner__p__${stepIndex}`}>{data[\"text\"]}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Step;\n","import React from 'react';\n\nfunction Audio(props){\n    const {src, audioRef} = props;\n    return (\n        <audio ref={audioRef} className='audio__all' id='audio__all' src={src} />\n    );\n}\n\nexport default Audio;","import React from 'react'\n\nfunction DeathTollDiv(props){\n    const { currentStepIndex } = props;\n    let arr =[0, 1, 10, 14391, 19188, 22734, 23882, 23888, 23888, 23888, 23888];\n\n\n    return (\n        <div className={`deathTollCtn ${currentStepIndex > 0 ? \"active\" : \"\"}`}>\n            <span className=\"deathToll_label\">DEATH TOLL</span>\n            <br />\n            <span\n                className=\"deathToll_num\"\n                data-target={arr[currentStepIndex]}\n                style={{ fontSize: \"20px\" }}\n            >\n                {arr[currentStepIndex]}\n            </span>\n        </div>\n    );\n}\n\nexport default DeathTollDiv","import React, { useState, useEffect, useRef } from \"react\";\nimport Timeline from \"./Timeline\";\nimport Scene from \"./Scene\";\nimport data from \"../data/copy.json\";\nimport HeadContainer from \"./headContainer.js\";\nimport SoundControl from \"./SoundControl\";\nimport Step from \"./Step.js\";\nimport { animationTime } from \"./data.js\";\nimport Audio from './Audio';\nimport DeathTollDiv from './DeathTollDiv';\n\nfunction MainCtn(props) {\n    const {startTime} = props;\n    const [currentStepIndex, setCurrentStepIndex] = useState(null);\n    // This callback fires when a Step hits the offset threshold. It receives the\n    // data prop of the step, which in this demo stores the index of the step.\n    let stepData = data.content.filter(t => t.type === \"step\");\n    let step = stepData[0].value;\n    const stepCtnRef = useRef();\n    const audioRef = useRef();\n\n    const COUNT = 23350;\n    const randomNumArr = [];\n\n    const [audioEnabled, setAudioEnabled] = useState(false);\n\n    for (let i = 0; i < COUNT; i++) {\n        randomNumArr.push(Math.random());\n    }\n    useEffect(() => {\n        showStep();\n    }, [currentStepIndex]);\n\n    useEffect(() => {\n         audioRef.current.muted = !audioEnabled;        \n    }, [audioEnabled]);\n\n    let i = 1;\n    let timer;\n\n    function showStep() {\n        let stepCtn = stepCtnRef.current;\n        let { children } = stepCtn;\n        let ctnArr = [...children];\n\n        ctnArr.forEach((child, i) => {\n            if (i == currentStepIndex) {\n                child.classList.add(\"active\");\n            } else if (child.classList.contains(\"active\")) {\n                child.classList.remove(\"active\");\n            }\n        });\n    }\n\n    function onClickFn(prop) { // run the animation\n        document.querySelector(\".head_ctn\").classList.remove(\"active\");\n        setCurrentStepIndex(0);\n        console.log('play audio');\n        audioRef.current.play();\n        setAudioEnabled(true);\n        // run the animation\n        let idx = 0;\n        let timer;\n        loop();\n        function loop(){\n            setCurrentStepIndex(idx);\n            timer = setTimeout(loop, animationTime[idx] * 1000);\n            idx++;\n            if (idx >= animationTime.length) {\n                clearTimeout(timer);\n            }\n        }\n\n    }\n\n    function onSouncControlClick(){\n        setAudioEnabled(!audioEnabled);\n    }\n\n    return (\n        <div className=\"main__ctn\">\n            <HeadContainer\n                onClickFn={onClickFn}\n                currentStepIndex={currentStepIndex}\n            />\n            <Audio\n                src={\"./assets/audio/COVID_Mockup_2021_06_30.mp3\"}\n                audioRef={audioRef}\n            />\n            {/* graphic ctn */}\n            <div\n                id=\"graphic_ctn_outer\"\n                style={{\n                    position: \"sticky\",\n                    top: 0,\n                    height: \"100vh\"\n                }}\n            >\n                <SoundControl\n                    step={currentStepIndex}\n                    onSouncControlClick={onSouncControlClick}\n                    audioEnabled={audioEnabled}\n                />\n                <DeathTollDiv currentStepIndex={currentStepIndex} />\n                {/* <Timeline step={currentStepIndex} /> */}\n                <section id=\"graphic_ctn\">\n                    <Scene\n                        step={currentStepIndex}\n                        randomNumArr={randomNumArr}\n                        COUNT={COUNT}\n                        startTime={startTime}\n                    />\n                </section>\n                <div className=\"step__ctn\" ref={stepCtnRef}>\n                    {step.map((data, stepIndex) => (\n                        <Step\n                            key={`step__${stepIndex}`}\n                            data={data}\n                            stepIndex={stepIndex}\n                            currentStepIndex={currentStepIndex}\n                        />\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default MainCtn;\n","import React, { Component } from \"react\";\nimport Intro from \"./Intro\";\nimport MainCtn from \"./MainCtn\";\n\nimport Credits from \"./Credits\";\nimport copy from \"../data/copy.json\";\n\nclass Main extends Component {\n\n  render() {\n    return (\n        <main>\n            <MainCtn startTime={performance.now()} />\n            {/* <Credits data={copy[\"credits-section\"]} /> */}\n        </main>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from \"react\";\n\nclass Credits extends Component {\n\n  render() {\n    return (\n      <section className=\"credits-section\">\n        <h2 id=\"credit-title\">Credits</h2>\n        <p className= \"credits\"><span className=\"job\">Reporting:</span> Ted Sherman is an enterprise and investigations reporter assigned to the Statehouse Bureau. Email him at <a href=\"mailto:tsherman@njadvancemedia.com\">tsherman@njadvancemedia.com</a> or connect with him on Twitter <a href=\"https://twitter.com/TedShermanSL\" rel=\"noopener noreferrer\" target=\"_blank\">@TedShermanSL.</a></p>\n        <p className= \"credits\"><span className=\"job\">Design and Development:</span> Cassidy Grom is a designer and reporter. Email her at <a href=\"mailto:cgrom@njadvancemedia.com\">cgrom@njadvancemedia.com</a> or connect with her on Twitter <a href=\"https://twitter.com/CassidyGrom\" rel=\"noopener noreferrer\" target=\"_blank\">@CassidyGrom.</a></p>\n        <p className= \"credits\"><span className=\"job\">Design and Development:</span> Arjun Kakkar is a developer and designer specializing in data visualization. Email him at <a href=\"mailto:akakkar@njadvancemedia.com\">akakkar@njadvancemedia.com</a> or connect with him on Twitter <a href=\"https://twitter.com/ArjunKakkar15\" rel=\"noopener noreferrer\" target=\"_blank\">@ArjunKakkar15.</a></p>\n        <p className= \"credits\"><span className=\"job\">Project Editors:</span> Ashleigh Graf and Christopher Kelly</p>\n        <p className= \"credits\"><span className=\"job\">Photos and videos:</span> Newsroom stock footage (Penn Station), Storyblocks stock footage (aerial shot, wine stains, airplane, Broadway), Patti Sapone (NJ transit train), Joe Fusco (family photos), Andre Malok (beach).</p>\n        <p className= \"credits\"><span className=\"job\">Additional contributors:</span> Alyssa Passeggio</p>\n      </section>\n    );\n  }\n}\n\nexport default Credits;","import React, { Component } from \"react\";\nimport copy from \"../data/copy.json\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchValue: \"search\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ searchValue: event.target.value });\n  }\n\n  handleSubmit(event) {\n    window.open(`https://nj.com/search?q=${this.state.searchValue}`);\n    event.preventDefault();\n  }\n\n  render() {\n    let njdcLinks = [];\n\n    for (const link in copy.navbarLinks) {\n      const current = copy.navbarLinks[link];\n      njdcLinks.push(\n        <a\n          key={link}\n          href={current.link}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {current.text}\n        </a>\n      );\n    }\n\n    function facebookShare() {\n      window.open(\n        `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(\n          copy.social.site_url\n        )}`,\n        \"facebook-share-dialog\",\n        \"width=626,height=436\"\n      );\n      return false;\n    }\n\n    return (\n      <section id=\"navbar\">\n        <div className=\"navbar-logo\">\n          <a\n            href=\"https://www.nj.com/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img\n              src=\"./assets/images/njdotcomlogowhite.png\"\n              alt=\"nj.com logo\"\n              style={{ padding: `5px 0px 4px 5px`, width: `50px` }}\n            />\n          </a>\n        </div>\n        <div className=\"navbar-social\">\n          <div className=\"button-container\">\n            <a\n              href=\"https://www.nj.com/digitalsubscription/inline/?utm_source=INL&utm_medium=ACQ-ADH0-1030a&utm_campaign=ACQ\"\n              className=\"sub-button\"\n            >\n              subscribe\n            </a>\n          </div>\n          <a href=\"/\" onClick={facebookShare} className=\"social-button nav-soc\">\n            <img\n              src=\"./assets/images/white-facebook.png\"\n              alt=\"share using facebook\"\n              style={{ padding: `17px 8px 12px 13px`, height: `87%` }}\n            />\n          </a>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={`https://twitter.com/intent/tweet?url=${copy.social.site_url}&text=${copy.social.description}`}\n            data-size=\"large\"\n            className=\"social-button nav-soc\"\n          >\n            <img\n              src=\"./assets/images/white-Twitter.png\"\n              alt=\"share using twitter\"\n              style={{ padding: `12px 5px 2px 5px`, height: `80%` }}\n            />\n          </a>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={`mailto:?subject=${copy.social.email_subj}&body=${copy.social.email_body}`}\n            className=\"social-button nav-soc\"\n          >\n            <img\n              src=\"./assets/images/envelope.png\"\n              alt=\"share using email\"\n              style={{ padding: `14px 9px 2px 5px`, height: `75%` }}\n            />\n          </a>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react'\nimport Main from \"./Main\"\nimport Navbar from \"./Navbar\"\n\nclass App extends Component {\n    render() {\n        return(\n            <div className=\"App\">\n                    <Navbar />\n                    <Main />\n            </div>\n        )\n    }\n}\n\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./js/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}